// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "cmd+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "alt+cmd+z",
    "command": "git.revertChange"
  },
  {
    "key": "alt+cmd+z",
    "command": "git.revertSelectedRanges"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+backspace",
    "command": "editor.action.deleteLines"
  },
  {
    "key": "cmd+l",
    "command": "prettier.forceFormatDocument"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "space f",
    "command": "workbench.action.quickOpen",
    "when": "!editorFocus && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+d",
    "command": "editor.action.duplicateSelection"
  },
  {
    "key": "cmd+d",
    "command": "git.timeline.openDiff",
    "when": "!editorTextFocus"
  },
  {
    "key": "cmd+d",
    "command": "git.openChange",
    "when": "!editorTextFocus"
  },
  {
    "key": "shift+cmd+v",
    "command": "markdown.showPreview"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+home",
    "command": "workbench.action.showPreviousWindowTab"
  },
  {
    "key": "cmd+b",
    "command": "markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+i",
    "command": "markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+i",
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+b",
    "command": "-md-shortcut.toggleBold",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+m cmd+c",
    "command": "md-shortcut.toggleCodeBlock",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m ctrl+c",
    "command": "-md-shortcut.toggleCodeBlock",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+m cmd+x",
    "command": "md-shortcut.toggleCheckboxes",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+m ctrl+x",
    "command": "-md-shortcut.toggleCheckboxes",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "ctrl+i",
    "command": "-md-shortcut.toggleItalic",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "cmd+a cmd+t",
    "command": "md-shortcut.addTable",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+alt+cmd+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "alt+enter",
    "command": "-testing.editFocusedTest",
    "when": "focusedView == 'workbench.view.testing'"
  },
  {
    "key": "alt+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "alt+enter",
    "command": "-editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+enter",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "cmd+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "alt+enter",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+.",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "backspace",
    "command": "extension.vim_shift+backspace",
    "when": "editorTextFocus && vim.active && vim.use<S-BS> && !inDebugRepl && vim.mode != 'Insert'"
  },
  { 
    "key": "backspace",
    "command": "deleteLeft",
    "when": "textInputFocus" 
  },
  {
    "key": "space e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!editorFocus && !inputFocus"
  },
  {
    "key": "shift+right",
    "command": "-cursorColumnSelectRight",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+right",
    "command": "-cursorRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+left",
    "command": "-cursorColumnSelectLeft",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+left",
    "command": "-cursorLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+up",
    "command": "-cursorUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+up",
    "command": "-cursorColumnSelectUp",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+down",
    "command": "-cursorColumnSelectDown",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+down",
    "command": "-cursorDownSelect",
    "when": "textInputFocus"
  }
]

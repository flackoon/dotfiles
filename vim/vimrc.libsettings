" Use ag with Ack in Vim
let g:ctrlsf_default_view_mode = 'compact'
let g:ctrlsf_auto_preview = 1
let g:ctrlsf_preview_position = 'inside'
let g:ctrlsf_compact_position = 'bottom_inside'
let g:ctrlsf_auto_focus = {
    \ "at": "start"
    \ }
let g:ctrlsf_winsize = '100%'

let g:auto_save = 1                                         " Enable autosave on change
let g:auto_save_silent = 1                                  " do not display the auto-save notification
let g:auto_save_events = ["InsertLeave", "TextChanged"]     " The events on which AutoSave will perform
let g:tmux_navigator_no_mappings = 1

let g:ruby_autocomplete_solargraph = '~/.rbenv/shims/solargraph'
let g:rubycomplete_classes_in_global = 1
let g:rubycomplete_rails = 1
let g:ruby_operators = 1
let g:ruby_pseudo_operators = 1
let g:ruby_space_errors = 1
let g:ruby_no_expensive = 1
let g:ruby_spellcheck_strings = 1

let g:gitgutter_sign_column_always = 1
let g:NERDTreeShowHidden = 1
let g:fzf_prefer_tmux = 1
let $FZF_DEFAULT_OPTIONS="--preview 'bat --color=always'"
let g:fzf_layout = { 'down': '0%', 'up': '~100%' }
let g:fzf_files_options = '--preview "(coderay {} || cat {}) 2> /dev/null | head -'.&lines.'"'
" [Buffers] Jump to the existing window if possible
let g:fzf_buffers_jump = 1
" [[B]Commits] Customize the options used by 'git log':
let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'
" [Tags] Command to generate tags file
let g:fzf_tags_command = 'ctags -R'
" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

